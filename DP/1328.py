# 풀이일자 : 2020/05/04
# 문제 이름 : 고층 빌딩
# 문제 번호 : 1328
# 작성자 : 이장행
# 문제 출처 : 백준 온라인 저지
# 알고리즘 분류 : 다이나믹 프로그래밍
# 빌딩이 위치한 가능한 순서의 경우 가짓수
# DP의 정의 : dp[i][j][k] = (dp[i-1][j][k-1] + dp[i-1][j-1][k] + dp[i-1][j][k] * (n-2))
# 쉽게 말하면 n개의 빌딩일 때는 n-1개의 빌딩일 때에서 높이가 n인 빌딩 1개를 추가했을 때로 생각하면 된다.
# n-1개의 빌딩일 때 왼쪽에 추가했을 때, 오른쪽에 추가했을 때, 그리고 사이에 추가했을 때 * (n-2) 인데, 사이에 추가할 경우는 맨 왼쪽, 맨 오른쪽을 제외해야 하므로 n-2를 곱해줘야 정확한 경우의 수가 된다.
import sys

n, l, r = map(int, sys.stdin.readline().strip().split())
dp = [[[0 for _ in range(r + 1)]for __ in range(l + 1)]
      for ___ in range(n + 1)]
dp[1][1][1] = 1
for i in range(2, n+1):
    for j in range(1, l+1) :
        for k in range(1, r+1):
            dp[i][j][k] = (dp[i-1][j][k]*(i-2) % 1000000007
                           + dp[i-1][j][k-1] % 1000000007
                           + dp[i-1][j-1][k] % 1000000007)
print(dp[n][l][r] % 1000000007)